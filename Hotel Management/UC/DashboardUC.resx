<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label20.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAgAAAAICAYAAADED76LAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAGRJREFUKFNjAAGP/vcKLn2f97v0fXrv0vvpv0vv5/UgMSRJmAQKfg9WBGSsR5NA
        4L5P+0EKsEtC8HuQAmzGwzEDyBhsElC8nsGhHehIrKZ8fA+SA/sErKgH5tiP74Hs/RBJBgYAH1WbnKsA
        9ysAAAAASUVORK5CYII=
</value>
  </data>
  <data name="label19.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAgAAAAICAYAAADED76LAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAFlJREFUKFN1j9EJwCAMRDNK9//JCBmnf72oA7Q5q1IkFR5I3hEuwgfggDe7vCK4
        46+cLTnFRqgIwasmcmKSDL+AgWz9ggGWS2Wgcv6WLKDrl4zQKFsYtleKPNT62pheUJ+VAAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>